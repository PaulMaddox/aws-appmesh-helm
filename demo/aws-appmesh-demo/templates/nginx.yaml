apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualService
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: {{ include "aws-appmesh-demo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  meshName: appmesh
  routes:
    - name: nginx-route
      http:
        match:
          prefix: /
        action:
          weightedTargets:
            - virtualNodeName: nginx
              weight: 100
---
apiVersion: appmesh.k8s.aws/v1beta1
kind: VirtualNode
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: {{ include "aws-appmesh-demo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  meshName: appmesh
  listeners:
    - portMapping:
        port: 80
        protocol: http
  serviceDiscovery:
    dns:
      hostName: nginx.{{ .Release.Namespace }}.svc.cluster.local
---
apiVersion: v1
kind: Service
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: {{ include "aws-appmesh-demo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  ports:
    - port: 80
      name: http
  selector:
    app.kubernetes.io/name: nginx
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: nginx
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: nginx
    helm.sh/chart: {{ include "aws-appmesh-demo.chart" . }}
    app.kubernetes.io/instance: {{ .Release.Name }}
    app.kubernetes.io/managed-by: {{ .Release.Service }}
spec:
  replicas: 2
  selector:
    matchLabels:
      app.kubernetes.io/name: nginx
  template:
    metadata:
      labels:
        app.kubernetes.io/name: nginx
    spec:
      containers:
        - name: nginx
          image: nginx:1.13.5
          ports:
            - containerPort: 80
          volumeMounts:
            - name: nginx-config
              mountPath: /etc/nginx/nginx.conf
              subPath: nginx.conf
      volumes:
        - name: nginx-config
          configMap:
            name: nginx-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: {{ .Release.Namespace }}
data:
  nginx.conf: |
    user  nginx;
    worker_processes  2;

    error_log  /var/log/nginx/error.log warn;
    pid        /var/run/nginx.pid;

    events {
        worker_connections  30000;
        use epoll;
        multi_accept on;
    }

    http {
        include       /etc/nginx/mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        open_file_cache max=1000 inactive=20s;
        open_file_cache_valid 30s;
        open_file_cache_min_uses 5;
        open_file_cache_errors off;

        #access_log  /var/log/nginx/access.log  main;
        access_log          off;
        sendfile            on;
        tcp_nopush          on;
        tcp_nodelay         on;
        keepalive_requests  100000;
        keepalive_timeout   65;
        # keepalive_timeout   0;
        #gzip  on;

        include /etc/nginx/conf.d/*.conf;
    }
